/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthorizedImport } from './routes/unauthorized'
import { Route as ProtectedImport } from './routes/protected'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as ProtectedIndexImport } from './routes/protected/index'
import { Route as ProtectedUsersIndexImport } from './routes/protected/users/index'
import { Route as ProtectedTemplatesIndexImport } from './routes/protected/templates/index'
import { Route as ProtectedTasksIndexImport } from './routes/protected/tasks/index'
import { Route as ProtectedReleasesIndexImport } from './routes/protected/releases/index'
import { Route as ProtectedProjectsIndexImport } from './routes/protected/projects/index'
import { Route as ProtectedNotificationsIndexImport } from './routes/protected/notifications/index'
import { Route as ProtectedUsersNewImport } from './routes/protected/users/new'
import { Route as ProtectedTasksNewImport } from './routes/protected/tasks/new'
import { Route as ProtectedReleasesNewImport } from './routes/protected/releases/new'
import { Route as ProtectedProjectsNewImport } from './routes/protected/projects/new'
import { Route as ProtectedNotificationsNewImport } from './routes/protected/notifications/new'
import { Route as ProtectedUsersUserIdIndexImport } from './routes/protected/users/$userId/index'
import { Route as ProtectedTemplatesUploadIndexImport } from './routes/protected/templates/upload/index'
import { Route as ProtectedTasksTaskIdIndexImport } from './routes/protected/tasks/$taskId/index'
import { Route as ProtectedReleasesReleaseIdIndexImport } from './routes/protected/releases/$releaseId/index'
import { Route as ProtectedProjectsProjectIdIndexImport } from './routes/protected/projects/$projectId/index'
import { Route as ProtectedNotificationsNotificationIdIndexImport } from './routes/protected/notifications/$notificationId/index'
import { Route as ProtectedUsersUserIdEditImport } from './routes/protected/users/$userId/edit'
import { Route as ProtectedUsersUserIdDeleteImport } from './routes/protected/users/$userId/delete'
import { Route as ProtectedTemplatesTemplateIdFillImport } from './routes/protected/templates/$templateId/fill'
import { Route as ProtectedTemplatesTemplateIdDeleteImport } from './routes/protected/templates/$templateId/delete'
import { Route as ProtectedTasksTaskIdEditImport } from './routes/protected/tasks/$taskId/edit'
import { Route as ProtectedTasksTaskIdDeleteImport } from './routes/protected/tasks/$taskId/delete'
import { Route as ProtectedReleasesReleaseIdSetStartedImport } from './routes/protected/releases/$releaseId/set-started'
import { Route as ProtectedReleasesReleaseIdSetPlannedImport } from './routes/protected/releases/$releaseId/set-planned'
import { Route as ProtectedReleasesReleaseIdSetFinishedImport } from './routes/protected/releases/$releaseId/set-finished'
import { Route as ProtectedReleasesReleaseIdEditImport } from './routes/protected/releases/$releaseId/edit'
import { Route as ProtectedReleasesReleaseIdDeleteImport } from './routes/protected/releases/$releaseId/delete'
import { Route as ProtectedProjectsProjectIdRefreshInviteImport } from './routes/protected/projects/$projectId/refresh-invite'
import { Route as ProtectedProjectsProjectIdEditImport } from './routes/protected/projects/$projectId/edit'
import { Route as ProtectedProjectsProjectIdDeleteImport } from './routes/protected/projects/$projectId/delete'
import { Route as ProtectedNotificationsNotificationIdDeleteImport } from './routes/protected/notifications/$notificationId/delete'

// Create/Update Routes

const UnauthorizedRoute = UnauthorizedImport.update({
  id: '/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/protected',
  path: '/protected',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedIndexRoute = ProtectedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedUsersIndexRoute = ProtectedUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedTemplatesIndexRoute = ProtectedTemplatesIndexImport.update({
  id: '/templates/',
  path: '/templates/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedTasksIndexRoute = ProtectedTasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedReleasesIndexRoute = ProtectedReleasesIndexImport.update({
  id: '/releases/',
  path: '/releases/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedProjectsIndexRoute = ProtectedProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedNotificationsIndexRoute =
  ProtectedNotificationsIndexImport.update({
    id: '/notifications/',
    path: '/notifications/',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedUsersNewRoute = ProtectedUsersNewImport.update({
  id: '/users/new',
  path: '/users/new',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedTasksNewRoute = ProtectedTasksNewImport.update({
  id: '/tasks/new',
  path: '/tasks/new',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedReleasesNewRoute = ProtectedReleasesNewImport.update({
  id: '/releases/new',
  path: '/releases/new',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedProjectsNewRoute = ProtectedProjectsNewImport.update({
  id: '/projects/new',
  path: '/projects/new',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedNotificationsNewRoute = ProtectedNotificationsNewImport.update({
  id: '/notifications/new',
  path: '/notifications/new',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedUsersUserIdIndexRoute = ProtectedUsersUserIdIndexImport.update({
  id: '/users/$userId/',
  path: '/users/$userId/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedTemplatesUploadIndexRoute =
  ProtectedTemplatesUploadIndexImport.update({
    id: '/templates/upload/',
    path: '/templates/upload/',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedTasksTaskIdIndexRoute = ProtectedTasksTaskIdIndexImport.update({
  id: '/tasks/$taskId/',
  path: '/tasks/$taskId/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedReleasesReleaseIdIndexRoute =
  ProtectedReleasesReleaseIdIndexImport.update({
    id: '/releases/$releaseId/',
    path: '/releases/$releaseId/',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedProjectsProjectIdIndexRoute =
  ProtectedProjectsProjectIdIndexImport.update({
    id: '/projects/$projectId/',
    path: '/projects/$projectId/',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedNotificationsNotificationIdIndexRoute =
  ProtectedNotificationsNotificationIdIndexImport.update({
    id: '/notifications/$notificationId/',
    path: '/notifications/$notificationId/',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedUsersUserIdEditRoute = ProtectedUsersUserIdEditImport.update({
  id: '/users/$userId/edit',
  path: '/users/$userId/edit',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedUsersUserIdDeleteRoute = ProtectedUsersUserIdDeleteImport.update(
  {
    id: '/users/$userId/delete',
    path: '/users/$userId/delete',
    getParentRoute: () => ProtectedRoute,
  } as any,
)

const ProtectedTemplatesTemplateIdFillRoute =
  ProtectedTemplatesTemplateIdFillImport.update({
    id: '/templates/$templateId/fill',
    path: '/templates/$templateId/fill',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedTemplatesTemplateIdDeleteRoute =
  ProtectedTemplatesTemplateIdDeleteImport.update({
    id: '/templates/$templateId/delete',
    path: '/templates/$templateId/delete',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedTasksTaskIdEditRoute = ProtectedTasksTaskIdEditImport.update({
  id: '/tasks/$taskId/edit',
  path: '/tasks/$taskId/edit',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedTasksTaskIdDeleteRoute = ProtectedTasksTaskIdDeleteImport.update(
  {
    id: '/tasks/$taskId/delete',
    path: '/tasks/$taskId/delete',
    getParentRoute: () => ProtectedRoute,
  } as any,
)

const ProtectedReleasesReleaseIdSetStartedRoute =
  ProtectedReleasesReleaseIdSetStartedImport.update({
    id: '/releases/$releaseId/set-started',
    path: '/releases/$releaseId/set-started',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedReleasesReleaseIdSetPlannedRoute =
  ProtectedReleasesReleaseIdSetPlannedImport.update({
    id: '/releases/$releaseId/set-planned',
    path: '/releases/$releaseId/set-planned',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedReleasesReleaseIdSetFinishedRoute =
  ProtectedReleasesReleaseIdSetFinishedImport.update({
    id: '/releases/$releaseId/set-finished',
    path: '/releases/$releaseId/set-finished',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedReleasesReleaseIdEditRoute =
  ProtectedReleasesReleaseIdEditImport.update({
    id: '/releases/$releaseId/edit',
    path: '/releases/$releaseId/edit',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedReleasesReleaseIdDeleteRoute =
  ProtectedReleasesReleaseIdDeleteImport.update({
    id: '/releases/$releaseId/delete',
    path: '/releases/$releaseId/delete',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedProjectsProjectIdRefreshInviteRoute =
  ProtectedProjectsProjectIdRefreshInviteImport.update({
    id: '/projects/$projectId/refresh-invite',
    path: '/projects/$projectId/refresh-invite',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedProjectsProjectIdEditRoute =
  ProtectedProjectsProjectIdEditImport.update({
    id: '/projects/$projectId/edit',
    path: '/projects/$projectId/edit',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedProjectsProjectIdDeleteRoute =
  ProtectedProjectsProjectIdDeleteImport.update({
    id: '/projects/$projectId/delete',
    path: '/projects/$projectId/delete',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedNotificationsNotificationIdDeleteRoute =
  ProtectedNotificationsNotificationIdDeleteImport.update({
    id: '/notifications/$notificationId/delete',
    path: '/notifications/$notificationId/delete',
    getParentRoute: () => ProtectedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/protected': {
      id: '/protected'
      path: '/protected'
      fullPath: '/protected'
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/unauthorized': {
      id: '/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof UnauthorizedImport
      parentRoute: typeof rootRoute
    }
    '/protected/': {
      id: '/protected/'
      path: '/'
      fullPath: '/protected/'
      preLoaderRoute: typeof ProtectedIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/notifications/new': {
      id: '/protected/notifications/new'
      path: '/notifications/new'
      fullPath: '/protected/notifications/new'
      preLoaderRoute: typeof ProtectedNotificationsNewImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/projects/new': {
      id: '/protected/projects/new'
      path: '/projects/new'
      fullPath: '/protected/projects/new'
      preLoaderRoute: typeof ProtectedProjectsNewImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/releases/new': {
      id: '/protected/releases/new'
      path: '/releases/new'
      fullPath: '/protected/releases/new'
      preLoaderRoute: typeof ProtectedReleasesNewImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/tasks/new': {
      id: '/protected/tasks/new'
      path: '/tasks/new'
      fullPath: '/protected/tasks/new'
      preLoaderRoute: typeof ProtectedTasksNewImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/users/new': {
      id: '/protected/users/new'
      path: '/users/new'
      fullPath: '/protected/users/new'
      preLoaderRoute: typeof ProtectedUsersNewImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/notifications/': {
      id: '/protected/notifications/'
      path: '/notifications'
      fullPath: '/protected/notifications'
      preLoaderRoute: typeof ProtectedNotificationsIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/projects/': {
      id: '/protected/projects/'
      path: '/projects'
      fullPath: '/protected/projects'
      preLoaderRoute: typeof ProtectedProjectsIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/releases/': {
      id: '/protected/releases/'
      path: '/releases'
      fullPath: '/protected/releases'
      preLoaderRoute: typeof ProtectedReleasesIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/tasks/': {
      id: '/protected/tasks/'
      path: '/tasks'
      fullPath: '/protected/tasks'
      preLoaderRoute: typeof ProtectedTasksIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/templates/': {
      id: '/protected/templates/'
      path: '/templates'
      fullPath: '/protected/templates'
      preLoaderRoute: typeof ProtectedTemplatesIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/users/': {
      id: '/protected/users/'
      path: '/users'
      fullPath: '/protected/users'
      preLoaderRoute: typeof ProtectedUsersIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/notifications/$notificationId/delete': {
      id: '/protected/notifications/$notificationId/delete'
      path: '/notifications/$notificationId/delete'
      fullPath: '/protected/notifications/$notificationId/delete'
      preLoaderRoute: typeof ProtectedNotificationsNotificationIdDeleteImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/projects/$projectId/delete': {
      id: '/protected/projects/$projectId/delete'
      path: '/projects/$projectId/delete'
      fullPath: '/protected/projects/$projectId/delete'
      preLoaderRoute: typeof ProtectedProjectsProjectIdDeleteImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/projects/$projectId/edit': {
      id: '/protected/projects/$projectId/edit'
      path: '/projects/$projectId/edit'
      fullPath: '/protected/projects/$projectId/edit'
      preLoaderRoute: typeof ProtectedProjectsProjectIdEditImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/projects/$projectId/refresh-invite': {
      id: '/protected/projects/$projectId/refresh-invite'
      path: '/projects/$projectId/refresh-invite'
      fullPath: '/protected/projects/$projectId/refresh-invite'
      preLoaderRoute: typeof ProtectedProjectsProjectIdRefreshInviteImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/releases/$releaseId/delete': {
      id: '/protected/releases/$releaseId/delete'
      path: '/releases/$releaseId/delete'
      fullPath: '/protected/releases/$releaseId/delete'
      preLoaderRoute: typeof ProtectedReleasesReleaseIdDeleteImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/releases/$releaseId/edit': {
      id: '/protected/releases/$releaseId/edit'
      path: '/releases/$releaseId/edit'
      fullPath: '/protected/releases/$releaseId/edit'
      preLoaderRoute: typeof ProtectedReleasesReleaseIdEditImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/releases/$releaseId/set-finished': {
      id: '/protected/releases/$releaseId/set-finished'
      path: '/releases/$releaseId/set-finished'
      fullPath: '/protected/releases/$releaseId/set-finished'
      preLoaderRoute: typeof ProtectedReleasesReleaseIdSetFinishedImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/releases/$releaseId/set-planned': {
      id: '/protected/releases/$releaseId/set-planned'
      path: '/releases/$releaseId/set-planned'
      fullPath: '/protected/releases/$releaseId/set-planned'
      preLoaderRoute: typeof ProtectedReleasesReleaseIdSetPlannedImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/releases/$releaseId/set-started': {
      id: '/protected/releases/$releaseId/set-started'
      path: '/releases/$releaseId/set-started'
      fullPath: '/protected/releases/$releaseId/set-started'
      preLoaderRoute: typeof ProtectedReleasesReleaseIdSetStartedImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/tasks/$taskId/delete': {
      id: '/protected/tasks/$taskId/delete'
      path: '/tasks/$taskId/delete'
      fullPath: '/protected/tasks/$taskId/delete'
      preLoaderRoute: typeof ProtectedTasksTaskIdDeleteImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/tasks/$taskId/edit': {
      id: '/protected/tasks/$taskId/edit'
      path: '/tasks/$taskId/edit'
      fullPath: '/protected/tasks/$taskId/edit'
      preLoaderRoute: typeof ProtectedTasksTaskIdEditImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/templates/$templateId/delete': {
      id: '/protected/templates/$templateId/delete'
      path: '/templates/$templateId/delete'
      fullPath: '/protected/templates/$templateId/delete'
      preLoaderRoute: typeof ProtectedTemplatesTemplateIdDeleteImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/templates/$templateId/fill': {
      id: '/protected/templates/$templateId/fill'
      path: '/templates/$templateId/fill'
      fullPath: '/protected/templates/$templateId/fill'
      preLoaderRoute: typeof ProtectedTemplatesTemplateIdFillImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/users/$userId/delete': {
      id: '/protected/users/$userId/delete'
      path: '/users/$userId/delete'
      fullPath: '/protected/users/$userId/delete'
      preLoaderRoute: typeof ProtectedUsersUserIdDeleteImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/users/$userId/edit': {
      id: '/protected/users/$userId/edit'
      path: '/users/$userId/edit'
      fullPath: '/protected/users/$userId/edit'
      preLoaderRoute: typeof ProtectedUsersUserIdEditImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/notifications/$notificationId/': {
      id: '/protected/notifications/$notificationId/'
      path: '/notifications/$notificationId'
      fullPath: '/protected/notifications/$notificationId'
      preLoaderRoute: typeof ProtectedNotificationsNotificationIdIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/projects/$projectId/': {
      id: '/protected/projects/$projectId/'
      path: '/projects/$projectId'
      fullPath: '/protected/projects/$projectId'
      preLoaderRoute: typeof ProtectedProjectsProjectIdIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/releases/$releaseId/': {
      id: '/protected/releases/$releaseId/'
      path: '/releases/$releaseId'
      fullPath: '/protected/releases/$releaseId'
      preLoaderRoute: typeof ProtectedReleasesReleaseIdIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/tasks/$taskId/': {
      id: '/protected/tasks/$taskId/'
      path: '/tasks/$taskId'
      fullPath: '/protected/tasks/$taskId'
      preLoaderRoute: typeof ProtectedTasksTaskIdIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/templates/upload/': {
      id: '/protected/templates/upload/'
      path: '/templates/upload'
      fullPath: '/protected/templates/upload'
      preLoaderRoute: typeof ProtectedTemplatesUploadIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/protected/users/$userId/': {
      id: '/protected/users/$userId/'
      path: '/users/$userId'
      fullPath: '/protected/users/$userId'
      preLoaderRoute: typeof ProtectedUsersUserIdIndexImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteChildren {
  ProtectedIndexRoute: typeof ProtectedIndexRoute
  ProtectedNotificationsNewRoute: typeof ProtectedNotificationsNewRoute
  ProtectedProjectsNewRoute: typeof ProtectedProjectsNewRoute
  ProtectedReleasesNewRoute: typeof ProtectedReleasesNewRoute
  ProtectedTasksNewRoute: typeof ProtectedTasksNewRoute
  ProtectedUsersNewRoute: typeof ProtectedUsersNewRoute
  ProtectedNotificationsIndexRoute: typeof ProtectedNotificationsIndexRoute
  ProtectedProjectsIndexRoute: typeof ProtectedProjectsIndexRoute
  ProtectedReleasesIndexRoute: typeof ProtectedReleasesIndexRoute
  ProtectedTasksIndexRoute: typeof ProtectedTasksIndexRoute
  ProtectedTemplatesIndexRoute: typeof ProtectedTemplatesIndexRoute
  ProtectedUsersIndexRoute: typeof ProtectedUsersIndexRoute
  ProtectedNotificationsNotificationIdDeleteRoute: typeof ProtectedNotificationsNotificationIdDeleteRoute
  ProtectedProjectsProjectIdDeleteRoute: typeof ProtectedProjectsProjectIdDeleteRoute
  ProtectedProjectsProjectIdEditRoute: typeof ProtectedProjectsProjectIdEditRoute
  ProtectedProjectsProjectIdRefreshInviteRoute: typeof ProtectedProjectsProjectIdRefreshInviteRoute
  ProtectedReleasesReleaseIdDeleteRoute: typeof ProtectedReleasesReleaseIdDeleteRoute
  ProtectedReleasesReleaseIdEditRoute: typeof ProtectedReleasesReleaseIdEditRoute
  ProtectedReleasesReleaseIdSetFinishedRoute: typeof ProtectedReleasesReleaseIdSetFinishedRoute
  ProtectedReleasesReleaseIdSetPlannedRoute: typeof ProtectedReleasesReleaseIdSetPlannedRoute
  ProtectedReleasesReleaseIdSetStartedRoute: typeof ProtectedReleasesReleaseIdSetStartedRoute
  ProtectedTasksTaskIdDeleteRoute: typeof ProtectedTasksTaskIdDeleteRoute
  ProtectedTasksTaskIdEditRoute: typeof ProtectedTasksTaskIdEditRoute
  ProtectedTemplatesTemplateIdDeleteRoute: typeof ProtectedTemplatesTemplateIdDeleteRoute
  ProtectedTemplatesTemplateIdFillRoute: typeof ProtectedTemplatesTemplateIdFillRoute
  ProtectedUsersUserIdDeleteRoute: typeof ProtectedUsersUserIdDeleteRoute
  ProtectedUsersUserIdEditRoute: typeof ProtectedUsersUserIdEditRoute
  ProtectedNotificationsNotificationIdIndexRoute: typeof ProtectedNotificationsNotificationIdIndexRoute
  ProtectedProjectsProjectIdIndexRoute: typeof ProtectedProjectsProjectIdIndexRoute
  ProtectedReleasesReleaseIdIndexRoute: typeof ProtectedReleasesReleaseIdIndexRoute
  ProtectedTasksTaskIdIndexRoute: typeof ProtectedTasksTaskIdIndexRoute
  ProtectedTemplatesUploadIndexRoute: typeof ProtectedTemplatesUploadIndexRoute
  ProtectedUsersUserIdIndexRoute: typeof ProtectedUsersUserIdIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedIndexRoute: ProtectedIndexRoute,
  ProtectedNotificationsNewRoute: ProtectedNotificationsNewRoute,
  ProtectedProjectsNewRoute: ProtectedProjectsNewRoute,
  ProtectedReleasesNewRoute: ProtectedReleasesNewRoute,
  ProtectedTasksNewRoute: ProtectedTasksNewRoute,
  ProtectedUsersNewRoute: ProtectedUsersNewRoute,
  ProtectedNotificationsIndexRoute: ProtectedNotificationsIndexRoute,
  ProtectedProjectsIndexRoute: ProtectedProjectsIndexRoute,
  ProtectedReleasesIndexRoute: ProtectedReleasesIndexRoute,
  ProtectedTasksIndexRoute: ProtectedTasksIndexRoute,
  ProtectedTemplatesIndexRoute: ProtectedTemplatesIndexRoute,
  ProtectedUsersIndexRoute: ProtectedUsersIndexRoute,
  ProtectedNotificationsNotificationIdDeleteRoute:
    ProtectedNotificationsNotificationIdDeleteRoute,
  ProtectedProjectsProjectIdDeleteRoute: ProtectedProjectsProjectIdDeleteRoute,
  ProtectedProjectsProjectIdEditRoute: ProtectedProjectsProjectIdEditRoute,
  ProtectedProjectsProjectIdRefreshInviteRoute:
    ProtectedProjectsProjectIdRefreshInviteRoute,
  ProtectedReleasesReleaseIdDeleteRoute: ProtectedReleasesReleaseIdDeleteRoute,
  ProtectedReleasesReleaseIdEditRoute: ProtectedReleasesReleaseIdEditRoute,
  ProtectedReleasesReleaseIdSetFinishedRoute:
    ProtectedReleasesReleaseIdSetFinishedRoute,
  ProtectedReleasesReleaseIdSetPlannedRoute:
    ProtectedReleasesReleaseIdSetPlannedRoute,
  ProtectedReleasesReleaseIdSetStartedRoute:
    ProtectedReleasesReleaseIdSetStartedRoute,
  ProtectedTasksTaskIdDeleteRoute: ProtectedTasksTaskIdDeleteRoute,
  ProtectedTasksTaskIdEditRoute: ProtectedTasksTaskIdEditRoute,
  ProtectedTemplatesTemplateIdDeleteRoute:
    ProtectedTemplatesTemplateIdDeleteRoute,
  ProtectedTemplatesTemplateIdFillRoute: ProtectedTemplatesTemplateIdFillRoute,
  ProtectedUsersUserIdDeleteRoute: ProtectedUsersUserIdDeleteRoute,
  ProtectedUsersUserIdEditRoute: ProtectedUsersUserIdEditRoute,
  ProtectedNotificationsNotificationIdIndexRoute:
    ProtectedNotificationsNotificationIdIndexRoute,
  ProtectedProjectsProjectIdIndexRoute: ProtectedProjectsProjectIdIndexRoute,
  ProtectedReleasesReleaseIdIndexRoute: ProtectedReleasesReleaseIdIndexRoute,
  ProtectedTasksTaskIdIndexRoute: ProtectedTasksTaskIdIndexRoute,
  ProtectedTemplatesUploadIndexRoute: ProtectedTemplatesUploadIndexRoute,
  ProtectedUsersUserIdIndexRoute: ProtectedUsersUserIdIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/protected': typeof ProtectedRouteWithChildren
  '/unauthorized': typeof UnauthorizedRoute
  '/protected/': typeof ProtectedIndexRoute
  '/protected/notifications/new': typeof ProtectedNotificationsNewRoute
  '/protected/projects/new': typeof ProtectedProjectsNewRoute
  '/protected/releases/new': typeof ProtectedReleasesNewRoute
  '/protected/tasks/new': typeof ProtectedTasksNewRoute
  '/protected/users/new': typeof ProtectedUsersNewRoute
  '/protected/notifications': typeof ProtectedNotificationsIndexRoute
  '/protected/projects': typeof ProtectedProjectsIndexRoute
  '/protected/releases': typeof ProtectedReleasesIndexRoute
  '/protected/tasks': typeof ProtectedTasksIndexRoute
  '/protected/templates': typeof ProtectedTemplatesIndexRoute
  '/protected/users': typeof ProtectedUsersIndexRoute
  '/protected/notifications/$notificationId/delete': typeof ProtectedNotificationsNotificationIdDeleteRoute
  '/protected/projects/$projectId/delete': typeof ProtectedProjectsProjectIdDeleteRoute
  '/protected/projects/$projectId/edit': typeof ProtectedProjectsProjectIdEditRoute
  '/protected/projects/$projectId/refresh-invite': typeof ProtectedProjectsProjectIdRefreshInviteRoute
  '/protected/releases/$releaseId/delete': typeof ProtectedReleasesReleaseIdDeleteRoute
  '/protected/releases/$releaseId/edit': typeof ProtectedReleasesReleaseIdEditRoute
  '/protected/releases/$releaseId/set-finished': typeof ProtectedReleasesReleaseIdSetFinishedRoute
  '/protected/releases/$releaseId/set-planned': typeof ProtectedReleasesReleaseIdSetPlannedRoute
  '/protected/releases/$releaseId/set-started': typeof ProtectedReleasesReleaseIdSetStartedRoute
  '/protected/tasks/$taskId/delete': typeof ProtectedTasksTaskIdDeleteRoute
  '/protected/tasks/$taskId/edit': typeof ProtectedTasksTaskIdEditRoute
  '/protected/templates/$templateId/delete': typeof ProtectedTemplatesTemplateIdDeleteRoute
  '/protected/templates/$templateId/fill': typeof ProtectedTemplatesTemplateIdFillRoute
  '/protected/users/$userId/delete': typeof ProtectedUsersUserIdDeleteRoute
  '/protected/users/$userId/edit': typeof ProtectedUsersUserIdEditRoute
  '/protected/notifications/$notificationId': typeof ProtectedNotificationsNotificationIdIndexRoute
  '/protected/projects/$projectId': typeof ProtectedProjectsProjectIdIndexRoute
  '/protected/releases/$releaseId': typeof ProtectedReleasesReleaseIdIndexRoute
  '/protected/tasks/$taskId': typeof ProtectedTasksTaskIdIndexRoute
  '/protected/templates/upload': typeof ProtectedTemplatesUploadIndexRoute
  '/protected/users/$userId': typeof ProtectedUsersUserIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/protected': typeof ProtectedIndexRoute
  '/protected/notifications/new': typeof ProtectedNotificationsNewRoute
  '/protected/projects/new': typeof ProtectedProjectsNewRoute
  '/protected/releases/new': typeof ProtectedReleasesNewRoute
  '/protected/tasks/new': typeof ProtectedTasksNewRoute
  '/protected/users/new': typeof ProtectedUsersNewRoute
  '/protected/notifications': typeof ProtectedNotificationsIndexRoute
  '/protected/projects': typeof ProtectedProjectsIndexRoute
  '/protected/releases': typeof ProtectedReleasesIndexRoute
  '/protected/tasks': typeof ProtectedTasksIndexRoute
  '/protected/templates': typeof ProtectedTemplatesIndexRoute
  '/protected/users': typeof ProtectedUsersIndexRoute
  '/protected/notifications/$notificationId/delete': typeof ProtectedNotificationsNotificationIdDeleteRoute
  '/protected/projects/$projectId/delete': typeof ProtectedProjectsProjectIdDeleteRoute
  '/protected/projects/$projectId/edit': typeof ProtectedProjectsProjectIdEditRoute
  '/protected/projects/$projectId/refresh-invite': typeof ProtectedProjectsProjectIdRefreshInviteRoute
  '/protected/releases/$releaseId/delete': typeof ProtectedReleasesReleaseIdDeleteRoute
  '/protected/releases/$releaseId/edit': typeof ProtectedReleasesReleaseIdEditRoute
  '/protected/releases/$releaseId/set-finished': typeof ProtectedReleasesReleaseIdSetFinishedRoute
  '/protected/releases/$releaseId/set-planned': typeof ProtectedReleasesReleaseIdSetPlannedRoute
  '/protected/releases/$releaseId/set-started': typeof ProtectedReleasesReleaseIdSetStartedRoute
  '/protected/tasks/$taskId/delete': typeof ProtectedTasksTaskIdDeleteRoute
  '/protected/tasks/$taskId/edit': typeof ProtectedTasksTaskIdEditRoute
  '/protected/templates/$templateId/delete': typeof ProtectedTemplatesTemplateIdDeleteRoute
  '/protected/templates/$templateId/fill': typeof ProtectedTemplatesTemplateIdFillRoute
  '/protected/users/$userId/delete': typeof ProtectedUsersUserIdDeleteRoute
  '/protected/users/$userId/edit': typeof ProtectedUsersUserIdEditRoute
  '/protected/notifications/$notificationId': typeof ProtectedNotificationsNotificationIdIndexRoute
  '/protected/projects/$projectId': typeof ProtectedProjectsProjectIdIndexRoute
  '/protected/releases/$releaseId': typeof ProtectedReleasesReleaseIdIndexRoute
  '/protected/tasks/$taskId': typeof ProtectedTasksTaskIdIndexRoute
  '/protected/templates/upload': typeof ProtectedTemplatesUploadIndexRoute
  '/protected/users/$userId': typeof ProtectedUsersUserIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/protected': typeof ProtectedRouteWithChildren
  '/unauthorized': typeof UnauthorizedRoute
  '/protected/': typeof ProtectedIndexRoute
  '/protected/notifications/new': typeof ProtectedNotificationsNewRoute
  '/protected/projects/new': typeof ProtectedProjectsNewRoute
  '/protected/releases/new': typeof ProtectedReleasesNewRoute
  '/protected/tasks/new': typeof ProtectedTasksNewRoute
  '/protected/users/new': typeof ProtectedUsersNewRoute
  '/protected/notifications/': typeof ProtectedNotificationsIndexRoute
  '/protected/projects/': typeof ProtectedProjectsIndexRoute
  '/protected/releases/': typeof ProtectedReleasesIndexRoute
  '/protected/tasks/': typeof ProtectedTasksIndexRoute
  '/protected/templates/': typeof ProtectedTemplatesIndexRoute
  '/protected/users/': typeof ProtectedUsersIndexRoute
  '/protected/notifications/$notificationId/delete': typeof ProtectedNotificationsNotificationIdDeleteRoute
  '/protected/projects/$projectId/delete': typeof ProtectedProjectsProjectIdDeleteRoute
  '/protected/projects/$projectId/edit': typeof ProtectedProjectsProjectIdEditRoute
  '/protected/projects/$projectId/refresh-invite': typeof ProtectedProjectsProjectIdRefreshInviteRoute
  '/protected/releases/$releaseId/delete': typeof ProtectedReleasesReleaseIdDeleteRoute
  '/protected/releases/$releaseId/edit': typeof ProtectedReleasesReleaseIdEditRoute
  '/protected/releases/$releaseId/set-finished': typeof ProtectedReleasesReleaseIdSetFinishedRoute
  '/protected/releases/$releaseId/set-planned': typeof ProtectedReleasesReleaseIdSetPlannedRoute
  '/protected/releases/$releaseId/set-started': typeof ProtectedReleasesReleaseIdSetStartedRoute
  '/protected/tasks/$taskId/delete': typeof ProtectedTasksTaskIdDeleteRoute
  '/protected/tasks/$taskId/edit': typeof ProtectedTasksTaskIdEditRoute
  '/protected/templates/$templateId/delete': typeof ProtectedTemplatesTemplateIdDeleteRoute
  '/protected/templates/$templateId/fill': typeof ProtectedTemplatesTemplateIdFillRoute
  '/protected/users/$userId/delete': typeof ProtectedUsersUserIdDeleteRoute
  '/protected/users/$userId/edit': typeof ProtectedUsersUserIdEditRoute
  '/protected/notifications/$notificationId/': typeof ProtectedNotificationsNotificationIdIndexRoute
  '/protected/projects/$projectId/': typeof ProtectedProjectsProjectIdIndexRoute
  '/protected/releases/$releaseId/': typeof ProtectedReleasesReleaseIdIndexRoute
  '/protected/tasks/$taskId/': typeof ProtectedTasksTaskIdIndexRoute
  '/protected/templates/upload/': typeof ProtectedTemplatesUploadIndexRoute
  '/protected/users/$userId/': typeof ProtectedUsersUserIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/protected'
    | '/unauthorized'
    | '/protected/'
    | '/protected/notifications/new'
    | '/protected/projects/new'
    | '/protected/releases/new'
    | '/protected/tasks/new'
    | '/protected/users/new'
    | '/protected/notifications'
    | '/protected/projects'
    | '/protected/releases'
    | '/protected/tasks'
    | '/protected/templates'
    | '/protected/users'
    | '/protected/notifications/$notificationId/delete'
    | '/protected/projects/$projectId/delete'
    | '/protected/projects/$projectId/edit'
    | '/protected/projects/$projectId/refresh-invite'
    | '/protected/releases/$releaseId/delete'
    | '/protected/releases/$releaseId/edit'
    | '/protected/releases/$releaseId/set-finished'
    | '/protected/releases/$releaseId/set-planned'
    | '/protected/releases/$releaseId/set-started'
    | '/protected/tasks/$taskId/delete'
    | '/protected/tasks/$taskId/edit'
    | '/protected/templates/$templateId/delete'
    | '/protected/templates/$templateId/fill'
    | '/protected/users/$userId/delete'
    | '/protected/users/$userId/edit'
    | '/protected/notifications/$notificationId'
    | '/protected/projects/$projectId'
    | '/protected/releases/$releaseId'
    | '/protected/tasks/$taskId'
    | '/protected/templates/upload'
    | '/protected/users/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/unauthorized'
    | '/protected'
    | '/protected/notifications/new'
    | '/protected/projects/new'
    | '/protected/releases/new'
    | '/protected/tasks/new'
    | '/protected/users/new'
    | '/protected/notifications'
    | '/protected/projects'
    | '/protected/releases'
    | '/protected/tasks'
    | '/protected/templates'
    | '/protected/users'
    | '/protected/notifications/$notificationId/delete'
    | '/protected/projects/$projectId/delete'
    | '/protected/projects/$projectId/edit'
    | '/protected/projects/$projectId/refresh-invite'
    | '/protected/releases/$releaseId/delete'
    | '/protected/releases/$releaseId/edit'
    | '/protected/releases/$releaseId/set-finished'
    | '/protected/releases/$releaseId/set-planned'
    | '/protected/releases/$releaseId/set-started'
    | '/protected/tasks/$taskId/delete'
    | '/protected/tasks/$taskId/edit'
    | '/protected/templates/$templateId/delete'
    | '/protected/templates/$templateId/fill'
    | '/protected/users/$userId/delete'
    | '/protected/users/$userId/edit'
    | '/protected/notifications/$notificationId'
    | '/protected/projects/$projectId'
    | '/protected/releases/$releaseId'
    | '/protected/tasks/$taskId'
    | '/protected/templates/upload'
    | '/protected/users/$userId'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/protected'
    | '/unauthorized'
    | '/protected/'
    | '/protected/notifications/new'
    | '/protected/projects/new'
    | '/protected/releases/new'
    | '/protected/tasks/new'
    | '/protected/users/new'
    | '/protected/notifications/'
    | '/protected/projects/'
    | '/protected/releases/'
    | '/protected/tasks/'
    | '/protected/templates/'
    | '/protected/users/'
    | '/protected/notifications/$notificationId/delete'
    | '/protected/projects/$projectId/delete'
    | '/protected/projects/$projectId/edit'
    | '/protected/projects/$projectId/refresh-invite'
    | '/protected/releases/$releaseId/delete'
    | '/protected/releases/$releaseId/edit'
    | '/protected/releases/$releaseId/set-finished'
    | '/protected/releases/$releaseId/set-planned'
    | '/protected/releases/$releaseId/set-started'
    | '/protected/tasks/$taskId/delete'
    | '/protected/tasks/$taskId/edit'
    | '/protected/templates/$templateId/delete'
    | '/protected/templates/$templateId/fill'
    | '/protected/users/$userId/delete'
    | '/protected/users/$userId/edit'
    | '/protected/notifications/$notificationId/'
    | '/protected/projects/$projectId/'
    | '/protected/releases/$releaseId/'
    | '/protected/tasks/$taskId/'
    | '/protected/templates/upload/'
    | '/protected/users/$userId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  ProtectedRoute: typeof ProtectedRouteWithChildren
  UnauthorizedRoute: typeof UnauthorizedRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
  UnauthorizedRoute: UnauthorizedRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/protected",
        "/unauthorized"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/protected": {
      "filePath": "protected.tsx",
      "children": [
        "/protected/",
        "/protected/notifications/new",
        "/protected/projects/new",
        "/protected/releases/new",
        "/protected/tasks/new",
        "/protected/users/new",
        "/protected/notifications/",
        "/protected/projects/",
        "/protected/releases/",
        "/protected/tasks/",
        "/protected/templates/",
        "/protected/users/",
        "/protected/notifications/$notificationId/delete",
        "/protected/projects/$projectId/delete",
        "/protected/projects/$projectId/edit",
        "/protected/projects/$projectId/refresh-invite",
        "/protected/releases/$releaseId/delete",
        "/protected/releases/$releaseId/edit",
        "/protected/releases/$releaseId/set-finished",
        "/protected/releases/$releaseId/set-planned",
        "/protected/releases/$releaseId/set-started",
        "/protected/tasks/$taskId/delete",
        "/protected/tasks/$taskId/edit",
        "/protected/templates/$templateId/delete",
        "/protected/templates/$templateId/fill",
        "/protected/users/$userId/delete",
        "/protected/users/$userId/edit",
        "/protected/notifications/$notificationId/",
        "/protected/projects/$projectId/",
        "/protected/releases/$releaseId/",
        "/protected/tasks/$taskId/",
        "/protected/templates/upload/",
        "/protected/users/$userId/"
      ]
    },
    "/unauthorized": {
      "filePath": "unauthorized.tsx"
    },
    "/protected/": {
      "filePath": "protected/index.tsx",
      "parent": "/protected"
    },
    "/protected/notifications/new": {
      "filePath": "protected/notifications/new.tsx",
      "parent": "/protected"
    },
    "/protected/projects/new": {
      "filePath": "protected/projects/new.tsx",
      "parent": "/protected"
    },
    "/protected/releases/new": {
      "filePath": "protected/releases/new.tsx",
      "parent": "/protected"
    },
    "/protected/tasks/new": {
      "filePath": "protected/tasks/new.tsx",
      "parent": "/protected"
    },
    "/protected/users/new": {
      "filePath": "protected/users/new.tsx",
      "parent": "/protected"
    },
    "/protected/notifications/": {
      "filePath": "protected/notifications/index.tsx",
      "parent": "/protected"
    },
    "/protected/projects/": {
      "filePath": "protected/projects/index.tsx",
      "parent": "/protected"
    },
    "/protected/releases/": {
      "filePath": "protected/releases/index.tsx",
      "parent": "/protected"
    },
    "/protected/tasks/": {
      "filePath": "protected/tasks/index.tsx",
      "parent": "/protected"
    },
    "/protected/templates/": {
      "filePath": "protected/templates/index.tsx",
      "parent": "/protected"
    },
    "/protected/users/": {
      "filePath": "protected/users/index.tsx",
      "parent": "/protected"
    },
    "/protected/notifications/$notificationId/delete": {
      "filePath": "protected/notifications/$notificationId/delete.tsx",
      "parent": "/protected"
    },
    "/protected/projects/$projectId/delete": {
      "filePath": "protected/projects/$projectId/delete.tsx",
      "parent": "/protected"
    },
    "/protected/projects/$projectId/edit": {
      "filePath": "protected/projects/$projectId/edit.tsx",
      "parent": "/protected"
    },
    "/protected/projects/$projectId/refresh-invite": {
      "filePath": "protected/projects/$projectId/refresh-invite.tsx",
      "parent": "/protected"
    },
    "/protected/releases/$releaseId/delete": {
      "filePath": "protected/releases/$releaseId/delete.tsx",
      "parent": "/protected"
    },
    "/protected/releases/$releaseId/edit": {
      "filePath": "protected/releases/$releaseId/edit.tsx",
      "parent": "/protected"
    },
    "/protected/releases/$releaseId/set-finished": {
      "filePath": "protected/releases/$releaseId/set-finished.tsx",
      "parent": "/protected"
    },
    "/protected/releases/$releaseId/set-planned": {
      "filePath": "protected/releases/$releaseId/set-planned.tsx",
      "parent": "/protected"
    },
    "/protected/releases/$releaseId/set-started": {
      "filePath": "protected/releases/$releaseId/set-started.tsx",
      "parent": "/protected"
    },
    "/protected/tasks/$taskId/delete": {
      "filePath": "protected/tasks/$taskId/delete.tsx",
      "parent": "/protected"
    },
    "/protected/tasks/$taskId/edit": {
      "filePath": "protected/tasks/$taskId/edit.tsx",
      "parent": "/protected"
    },
    "/protected/templates/$templateId/delete": {
      "filePath": "protected/templates/$templateId/delete.tsx",
      "parent": "/protected"
    },
    "/protected/templates/$templateId/fill": {
      "filePath": "protected/templates/$templateId/fill.tsx",
      "parent": "/protected"
    },
    "/protected/users/$userId/delete": {
      "filePath": "protected/users/$userId/delete.tsx",
      "parent": "/protected"
    },
    "/protected/users/$userId/edit": {
      "filePath": "protected/users/$userId/edit.tsx",
      "parent": "/protected"
    },
    "/protected/notifications/$notificationId/": {
      "filePath": "protected/notifications/$notificationId/index.tsx",
      "parent": "/protected"
    },
    "/protected/projects/$projectId/": {
      "filePath": "protected/projects/$projectId/index.tsx",
      "parent": "/protected"
    },
    "/protected/releases/$releaseId/": {
      "filePath": "protected/releases/$releaseId/index.tsx",
      "parent": "/protected"
    },
    "/protected/tasks/$taskId/": {
      "filePath": "protected/tasks/$taskId/index.tsx",
      "parent": "/protected"
    },
    "/protected/templates/upload/": {
      "filePath": "protected/templates/upload/index.tsx",
      "parent": "/protected"
    },
    "/protected/users/$userId/": {
      "filePath": "protected/users/$userId/index.tsx",
      "parent": "/protected"
    }
  }
}
ROUTE_MANIFEST_END */
